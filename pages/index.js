import { ApolloClient, gql, InMemoryCache} from '@apollo/client'
import Head from 'next/head'
import styles from '../styles/Home.module.scss'
import  { Deck as Cards } from './../components/deck' 

const client = new ApolloClient({
  uri: 'http://localhost:4000/',
  cache: new InMemoryCache()
})

const tableQuery = gql`
  query{
    table{
      symbol
      number
    }
  }
`

const cardsQuery = gql`
  query GetCards($cards: int){
    getCards(cards: $cards){
      symbol
      number
    }
  }
`

export default function Home({title, table, hand}) {
  return (
    <div className="App">
    <Head>
      <title>Miami Hold</title>
      <meta name="description" content="Generated by create next app" />
      <link rel="icon" href="/favicon.ico"/>
    </Head>
    <div className={styles.home}>
      <div className={styles.cards}>
        <h1 className={styles.title}>{title}</h1>
        <div className={styles.container}>
          <Cards cardsToShow={table} flipped ="2" path="table" >
            <h2 >Table</h2>
          </Cards>
          <Cards cardsToShow={hand} flipped ="2" path="hand">
            <h2 >Hand</h2>
          </Cards>
        </div>
      </div>
      </div>
    </div>
  )
}


export async function getServerSideProps(context){
  
  const tableData = await client.query({
    query:tableQuery
  })

  const handData = await client.query({
    query: cardsQuery,
    variables: {
      cards: 2
    },
    fetchPolicy: 'no-cache'
  })
  
  return{
    props: {
      title: 'Miami Hold',
      table: tableData.data.table,
      hand: handData.data.getCards
    },
  }
}
